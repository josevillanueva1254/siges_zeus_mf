services:
  primary:
    image: postgres:15
    container_name: postgres_primary
    user: postgres  # Asegura que PostgreSQL no se ejecute como root
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: sigeszeus
    ports:
      - "5432:5432"
    volumes:
      - primary_data:/var/lib/postgresql/data
      - ./primary/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./primary/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./primary/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./primary/setup_primary.sh:/docker-entrypoint-initdb.d/setup_primary.sh
    command:
      bash -c "/docker-entrypoint-initdb.d/setup_primary.sh && postgres -c config_file=/etc/postgresql/postgresql.conf"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d sigeszeus"]
      interval: 10s
      timeout: 5s
      retries: 5

  replica:
    image: postgres:15
    container_name: postgres_replica
    user: postgres  # Asegura que PostgreSQL no se ejecute como root
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    depends_on:
      primary:
        condition: service_healthy
    ports:
      - "5433:5432"
    volumes:
      - replica_data:/var/lib/postgresql/data
      - ./replica/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./replica/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./replica/setup_replica.sh:/docker-entrypoint-initdb.d/setup_replica.sh
    command:
      bash -c "/docker-entrypoint-initdb.d/setup_replica.sh && postgres"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  primary_data:
  replica_data:
